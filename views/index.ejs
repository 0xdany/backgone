<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BackGone</title>
    <link href="/styles/output.css" rel="stylesheet" />
    <script src="/node_modules/htmx.org/dist/htmx.min.js"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&display=swap"
      rel="stylesheet"
    />

    <style>
      .dropzone.dragover {
        border-color: #000;
      }

      .loader {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        animation: spin 2s linear infinite;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>

  <body class="items-center justify-center bg-blue-950 font-manrope">
    <!-- CONVERSION PANEL -->
    <div class="mt-10 flex items-center justify-center">
      <div
        class="py10md:py-20 w-11/12 rounded-3xl bg-sky-400 p-8 md:grid md:grid-cols-2"
      >
        <!-- LEFT -->
        <div class="grid place-items-center">
          <div class="text-center md:text-left">
            <h1 class="text-4xl font-bold md:text-5xl">Backgone</h1>
            <h2 class="text-lg font-semibold md:text-2xl">
              Remove everything but you!
            </h2>
          </div>
        </div>
        <!-- RIGHT -->
        <div>
          <div class="flex justify-center pb-4">
            <div
              id="dropzone"
              class="mt-10 flex aspect-square h-40 rotate-6 cursor-pointer items-center rounded-xl border-2 border-dashed border-slate-400 bg-white px-10 py-4 text-center text-xs shadow-xl hover:bg-slate-200 sm:h-56 sm:text-base"
              hx-post="/upload"
              hx-encoding="multipart/form-data"
              hx-trigger="drop"
              hx-target="#result"
              hx-on="dragover: addClass('dragover'); dragleave: removeClass('dragover'); drop: validateAndUpload(event)"
            >
              Drag and drop an image here or click to upload
              <input type="file" name="image" class="hidden" />
            </div>

            <div
              class="-ml-6 mt-28 flex aspect-square h-40 -rotate-6 justify-center rounded-xl border-2 border-dashed border-slate-400 bg-white shadow-xl sm:-ml-20 sm:mt-52 sm:h-56"
            >
              <div
                id="result"
                class="flex items-center justify-center text-center text-xs sm:text-base"
              >
                Waiting for you to drop something there &gt;-&lt;
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const dropzone = document.getElementById("dropzone");
        const input = dropzone.querySelector('input[type="file"]');
        const result = document.getElementById("result");

        dropzone.addEventListener("click", function () {
          input.click();
        });

        input.addEventListener("change", function (event) {
          handleFiles(event.target.files);
        });

        dropzone.addEventListener("dragover", function (event) {
          event.preventDefault();
          dropzone.classList.add("dragover");
        });

        dropzone.addEventListener("dragleave", function () {
          dropzone.classList.remove("dragover");
        });

        dropzone.addEventListener("drop", function (event) {
          event.preventDefault();
          dropzone.classList.remove("dragover");
          handleFiles(event.dataTransfer.files);
        });

        function handleFiles(files) {
          if (files.length > 0) {
            const file = files[0];
            if (validateFile(file)) {
              const formData = new FormData();
              formData.append("image", file);
              result.innerHTML = `
                <div class="flex flex-col items-center">
                  <div class="loader mb-2"></div>
                  <span>Doing hard stuff ðŸ¤¯...</span>
                </div>
              `;
              fetch("/upload", {
                method: "POST",
                body: formData,
              })
                .then((response) => response.json())
                .then((data) => {
                  result.innerHTML = `
                    <a href="${data.imageUrl}" download="processed.png" class="h-full w-full flex justify-center hover:bg-slate-200">
                      <img src="${data.imageUrl}" alt="Processed Image" class="h-full w-full object-contain flex justify-center">
                    </a>`;
                })
                .catch((error) => {
                  console.error("Error:", error);
                  result.innerText =
                    "Error processing image. Please try again ðŸ¤¥";
                });
            }
          }
        }

        function validateFile(file) {
          const validTypes = ["image/jpeg"];
          dropzone.classList.remove("bg-red-200");
          dropzone.innerText = "Drag and drop an image here or click to upload";

          if (!validTypes.includes(file.type)) {
            dropzone.classList.add("bg-red-200");
            dropzone.innerText =
              "Only .jpg and .jpeg files are allowed. How could you ðŸ¤¬";
            return false;
          }
          return true;
        }
      });
    </script>
  </body>
</html>
